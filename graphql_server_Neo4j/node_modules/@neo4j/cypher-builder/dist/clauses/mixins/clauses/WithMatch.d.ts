import type { Pattern } from "../../..";
import { Match, OptionalMatch } from "../../..";
import type { NodeRef } from "../../../references/NodeRef";
import { MixinClause } from "../Mixin";
export declare abstract class WithMatch extends MixinClause {
    /** Add a {@link Match} clause
     * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/match/)
     */
    match(clause: Match): Match;
    match(pattern: Pattern): Match;
    /** @deprecated Use {@link Pattern} instead */
    match(pattern: NodeRef | Pattern): Match;
    /** Add an {@link OptionalMatch} clause
     * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/optional-match/)
     */
    optionalMatch(pattern: Pattern): OptionalMatch;
    /** @deprecated Use {@link Pattern} instead */
    optionalMatch(pattern: NodeRef | Pattern): OptionalMatch;
}
