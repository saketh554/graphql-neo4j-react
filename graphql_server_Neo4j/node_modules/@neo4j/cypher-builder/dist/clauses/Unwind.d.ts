import type { CypherEnvironment } from "../Environment";
import { Clause } from "./Clause";
import { WithCreate } from "./mixins/clauses/WithCreate";
import { WithMatch } from "./mixins/clauses/WithMatch";
import { WithMerge } from "./mixins/clauses/WithMerge";
import { WithReturn } from "./mixins/clauses/WithReturn";
import { WithWith } from "./mixins/clauses/WithWith";
import { WithDelete } from "./mixins/sub-clauses/WithDelete";
import { WithOrder } from "./mixins/sub-clauses/WithOrder";
import { WithRemove } from "./mixins/sub-clauses/WithRemove";
import { WithSet } from "./mixins/sub-clauses/WithSet";
import type { ProjectionColumn } from "./sub-clauses/Projection";
export interface Unwind extends WithWith, WithDelete, WithMatch, WithReturn, WithRemove, WithSet, WithCreate, WithMerge, WithOrder {
}
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/unwind/)
 * @category Clauses
 */
export declare class Unwind extends Clause {
    private readonly projection;
    constructor(...columns: Array<ProjectionColumn>);
    addColumns(...columns: Array<"*" | ProjectionColumn>): void;
    /** Append an {@link Unwind} clause.
     * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/unwind/)
     */
    unwind(clause: Unwind): Unwind;
    unwind(...columns: Array<ProjectionColumn>): Unwind;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
    private addColumnsToUnwindClause;
}
