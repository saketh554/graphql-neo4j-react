import type { Expr } from "../../Cypher";
import { CypherFunction } from "./CypherFunctions";
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-abs)
 * @group Cypher Functions
 * @category Math
 */
export declare function abs(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-ceil)
 * @group Cypher Functions
 * @category Math
 */
export declare function ceil(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-floor)
 * @group Cypher Functions
 * @category Math
 */
export declare function floor(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-isnan)
 * @group Cypher Functions
 * @category Math
 */
export declare function cypherIsNaN(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-rand)
 * @group Cypher Functions
 * @category Math
 */
export declare function rand(): CypherFunction;
/**
 * Precision mode for `Cypher.round()`
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-round3)
 * @see {@link round}
 */
export type ROUND_PRECISION_MODE = "UP" | "DOWN" | "CEILING" | "FLOOR" | "HALF_UP" | "HALF_DOWN" | "HALF_EVEN";
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-round)
 * @group Cypher Functions
 * @category Math
 */
export declare function round(expr: Expr, precision?: Expr | number, mode?: ROUND_PRECISION_MODE): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-numeric/#functions-sign)
 * @group Cypher Functions
 * @category Math
 */
export declare function sign(expr: Expr): CypherFunction;
/** Cypher function `e()` that returns the returns the base of the natural logarithm.
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-e)
 * @group Cypher Functions
 * @category Math
 */
export declare function e(): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-exp)
 * @group Cypher Functions
 * @category Math
 */
export declare function exp(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-log)
 * @group Cypher Functions
 * @category Math
 */
export declare function log(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-log10)
 * @group Cypher Functions
 * @category Math
 */
export declare function log10(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-logarithmic/#functions-sqrt)
 * @group Cypher Functions
 * @category Math
 */
export declare function sqrt(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-acos)
 * @group Cypher Functions
 * @category Math
 */
export declare function acos(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-asin)
 * @group Cypher Functions
 * @category Math
 */
export declare function asin(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-atan)
 * @group Cypher Functions
 * @category Math
 */
export declare function atan(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-atan2)
 * @group Cypher Functions
 * @category Math
 */
export declare function atan2(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-cos)
 * @group Cypher Functions
 * @category Math
 */
export declare function cos(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-cot)
 * @group Cypher Functions
 * @category Math
 */
export declare function cot(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-degrees)
 * @group Cypher Functions
 * @category Math
 */
export declare function degrees(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-haversin)
 * @group Cypher Functions
 * @category Math
 */
export declare function haversin(expr: Expr): CypherFunction;
/** 3.141592653589793
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-pi)
 * @see https://www.piday.org/
 * @group Cypher Functions
 * @category Math
 */
export declare function pi(): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-radians)
 * @group Cypher Functions
 * @category Math
 */
export declare function radians(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-sin)
 * @group Cypher Functions
 * @category Math
 */
export declare function sin(expr: Expr): CypherFunction;
/**
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/functions/mathematical-trigonometric/#functions-tan)
 * @group Cypher Functions
 * @category Math
 */
export declare function tan(expr: Expr): CypherFunction;
