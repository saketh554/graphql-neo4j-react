import type { DirectiveNode } from "graphql";
import type { Directive } from "graphql-compose";
import type { AttributeAdapter } from "../schema-model/attribute/model-adapters/AttributeAdapter";
import type { Neo4jFeaturesSettings } from "../types";
export declare function getWhereFieldsForAttributes({ attributes, userDefinedFieldDirectives, features, ignoreCypherFieldFilters, }: {
    attributes: AttributeAdapter[];
    userDefinedFieldDirectives?: Map<string, DirectiveNode[]>;
    features: Neo4jFeaturesSettings | undefined;
    ignoreCypherFieldFilters: boolean;
}): Record<string, {
    type: string;
    directives: Directive[];
}>;
//# sourceMappingURL=get-where-fields.d.ts.map