import { type DirectiveNode } from "graphql";
import type { Directive, SchemaComposer } from "graphql-compose";
import type { Subgraph } from "../../classes/Subgraph";
import { RelationshipAdapter } from "../../schema-model/relationship/model-adapters/RelationshipAdapter";
import type { RelationshipDeclarationAdapter } from "../../schema-model/relationship/model-adapters/RelationshipDeclarationAdapter";
import type { Neo4jFeaturesSettings } from "../../types";
export declare function augmentObjectOrInterfaceTypeWithRelationshipField({ relationshipAdapter, userDefinedFieldDirectives, subgraph, features, composer, }: {
    relationshipAdapter: RelationshipAdapter | RelationshipDeclarationAdapter;
    userDefinedFieldDirectives: Map<string, DirectiveNode[]>;
    subgraph?: Subgraph | undefined;
    features?: Neo4jFeaturesSettings;
    composer: SchemaComposer;
}): Record<string, {
    type: string;
    description?: string;
    directives: Directive[];
    args?: any;
}>;
export declare function augmentObjectOrInterfaceTypeWithConnectionField(relationshipAdapter: RelationshipAdapter | RelationshipDeclarationAdapter, userDefinedFieldDirectives: Map<string, DirectiveNode[]>, schemaComposer: SchemaComposer, features: Neo4jFeaturesSettings | undefined): Record<string, {
    type: string;
    description?: string;
    directives: Directive[];
    args?: any;
}>;
//# sourceMappingURL=augment-object-or-interface.d.ts.map