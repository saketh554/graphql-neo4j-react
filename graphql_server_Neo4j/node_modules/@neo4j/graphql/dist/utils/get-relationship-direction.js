"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCypherRelationshipDirection = void 0;
const constants_1 = require("../constants");
function getCypherRelationshipDirection(relationField, fieldArgs = {}) {
    const direction = getRelationshipDirection(relationField, fieldArgs);
    switch (direction) {
        case "IN":
            return "left";
        case "OUT":
            return "right";
        case "undirected":
            return "undirected";
    }
}
exports.getCypherRelationshipDirection = getCypherRelationshipDirection;
function getRelationshipDirection(relationField, fieldArgs) {
    /**
     * Duplicate of the schema-model `getCypherDirection` method;
     **/
    if (fieldArgs.directed === false ||
        relationField.queryDirection === constants_1.RelationshipQueryDirectionOption.UNDIRECTED_ONLY ||
        relationField.queryDirection === constants_1.RelationshipQueryDirectionOption.UNDIRECTED) {
        return "undirected";
    }
    return relationField.direction;
}
//# sourceMappingURL=get-relationship-direction.js.map